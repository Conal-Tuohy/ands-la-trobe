#summary Notes on installation of XMLCalabash
#labels DC19

= XML Calabash installation =

As per http://xmlcalabash.com/docs/, as brief as it is.

Download calabash distro from http://xmlcalabash.com/download/calabash-0.9.32.zip
unzipped to /home/fedora-user/pipelines/calabash

== Simple test ==

Wrote shell script `/home/fedora-user/pipelines/xproc-test/calabash.sh` to launch calabash:

{{{
#!/bin/sh
java -Xmx1024m -cp /home/fedora-user/pipelines/calabash/calabash.jar:/home/fedora-user/pipelines/calabash/lib/commons-codec-1.3.jar:/home/fedora-user/pipelines/calabash/lib/commons-logging-1.1.1.jar:/home/fedora-user/pipelines/calabash/lib/commons-httpclient-3.1.jar:/home/fedora-user/pipelines/calabash/lib/saxon9he.jar com.xmlcalabash.drivers.Main $*
}}}

== Custom scripts ==

[http://code.google.com/p/ands-la-trobe/source/browse/#svn%2Ftrunk%2Fpipelines This location] contains the pipelines used by XMLCalabash on the CMSS production system. They should also be checked out to the /home/fedora-user/pipelines directory.

== Starting Calabash pipelines ==

Note: this should be done only after JMI has been enabled on the Fedora Commons install.

The following script can be used to start a pipeline: 

{{{
#!/bin/bash
# This script starts a fedora-update-handler service

# The service is a JMS client which listens to "fedora.apim.update" messages from Fedora.
# When an update event occurs, the fedora-update-handler executes an external program
# and passes the event message (an Atom XML document) to the program's standard input.
while true
do
        java -jar fedora-update-handler/fedora-update-handler.jar start $1
        echo "Restarting in 5 seconds. Press [CTRL+C] to stop.."
        sleep 5
done
}}}

And the following can be used to stop one:

{{{
#!/bin/bash
# This script stops a persistent subscription previously made by a fedora-update-handler service

# The service is a JMS client which listens to "fedora.apim.update" messages from Fedora.
# When an update event occurs, the fedora-update-handler executes an external program
# and passes the event message (an Atom XML document) to the program's standard input.

java -jar fedora-update-handler/fedora-update-handler.jar stop $1
}}}
Pending: screen based solution.