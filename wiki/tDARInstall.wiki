#summary Installation of the Digital Archaeological Record
=tDAR Install=

==Postgresql==
tDAR uses Postgresql for storage. 

{{{
yum install postgresql-server
chkconfig postgresql on
}}}

==tDAR build and deployment==

Source code. Adam Brin provided a tarball of the `src` folder of the `eolian` branch, but didn't include the pom.xml (Maven build file), so I downloaded it separately from their repository:
{{{
wget http://dev.tdar.org/fisheye/browse/~raw,r=2432/tDAR/branches/eolian/pom.xml
}}}

tDAR is a Java app, built with Maven. 

==Maven==

Yum appears (as of 12/7/11) to only have an ancient build of Maven available (2.0.8), and this is earlier than the minimun required version.

Downloaded Maven 2.2.1 from http://www.apache.org/dyn/closer.cgi/maven/binaries/apache-maven-2.2.1-bin.tar.gz and installed manually (ln -s /bin -> usr/bin, /lib -> /var/lib/, etc).

Followed instructions at: http://dev.tdar.org/confluence/display/TDAR/deploying+tDAR up to and including the step of running the Maven build.

Added script created /ands/tDAR-install/build.sh to call maven build process

==Tomcat config for tDAR==

To simplify repeated deployment, I wrote a Tomcat Context XML file at /usr/share/tomcat6/conf/Catalina/localhost/ROOT.xml to load the web application from /ands/tDAR-install/target/ROOT:
{{{
<Context docBase="/ands/tDAR-install/target/ROOT"/>
}}}

==tDAR configuration==

tDAR is configured with a bunch of property files.

(When renaming the .production files, I moved any files which would have been overwritten into a "backup" folder).

These have been changed as follows: 

===src/main/resources/log4j.properties===
Replaced Adam Brin's email with Daniel's and Conal's.
Replaced file appender path /logs/tdar.log with /var/log/tdar/tdar.log

===src/main/resources/tdar.properties===
changed file.store.location and personal.file.store.location:

file.store.location=/ands/tdar/filestore
personal.file.store.location=/ands/tdar/personal-filestore
web.root=src/main/webapp
file.store.class=org.tdar.filestore.PairtreeFilestore
run.periodic.events=true

==Crowd==
tDAR uses Atlassian "Crowd" for authentication:

http://confluence.atlassian.com/display/CROWD/Installing+Crowd+and+CrowdID

Installed Postgres-server via Yum, and added the Postgre JDBC driver from http://jdbc.postgresql.org/download/postgresql-8.4-701.jdbc4.jar to /usr/share/tomcat6/lib

Followed directions at http://confluence.atlassian.com/display/CROWD/PostgreSQL for setting up database: Added user crowduser (with createdb and createuser) and database crowddb. Gave access to crowddb.`*` to crowduser.

added setclasspath.sh (located in apache-tomcat/bin/ to $TOMCAT_HOME/bin (/usr/share/tomcat6/bin) as it is required to be there by apache-tomcat/bin/startup.sh

ran build.sh

ran start_crowd.sh


==tDAR==
http://dev.tdar.org/fisheye/browse/tDAR/branches/eolian/src/main/resources/crowd.properties.production?r=2188&r=2188



The Crowd groups which tDAR expects are defined in an enum here:
http://dev.tdar.org/fisheye/browse/tDAR/branches/eolian/src/main/java/org/tdar/core/service/CrowdService.java?hb=true#to47

Daniel has installed Crowd. Daniel: please document that here.