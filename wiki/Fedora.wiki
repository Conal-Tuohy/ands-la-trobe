#summary Notes about Fedora, especially interfaces

= Fedora (interfaces) =

See http://fedora-commons.org/documentation/3.3/REST%20API.html

== Ingest ==

Normally we would aim to create items with SWORD, but we can also create by POSTing to `/objects/new` or `/objects/{pid}` (to create with a specific PID), with text/xml content

== RIF-CS updates ==

Can create (POST), read (GET) and update (PUT) RIF-CS datastreams at:
`/objects/{pid}/datastreams/{dsID}`

NB We can use PUT to create and update streams so we don't ever need POST. NB the GET method on the above URI will return metadata about the stream; to obtain the stream itself we need to append `/content` to the URI. This is a bug in the Fedora API, really, but it can be worked around in a proxy: whenever the proxy receives a GET request for a URI with that pattern, it can append `/content`, but for other methods it won't need to.

If we use the same name for all rif-cs datastreams (e.g. "rif-cs") then we can create an httpd proxy which proxies from `/rif-cs/{pid}` to `/objects/{pid}/datastreams/rif-cs` which will then let us treat the values of rif-cs keys as (relative) URIs, and provide a RESTful access layer to just the rif-cs.

== Search/Lookup ==
The XForms UI can look up related Fedora objects using this API:

http://fedora-commons.org/documentation/3.0b1/userdocs/server/webservices/apialite/index.html#findObjects

e.g. http://andsdb-dc19-dev.latrobe.edu.au/fedora/search?pid=true&title=true&terms=&query=title~JISC&maxResults=80&xml=true

== Notifications ==
Fedora uses Apache ActiveMQ for messaging.

We may want to use this as a way to listen for edits of the RIF-CS data in Fedora and keep a separate search index up to date.

ActiveMQ supports a number of protocols including a supposedly "RESTful" HTTP interface that would be useable from XProc.


http://activemq.apache.org/rest.html

A bogus aspect of it is that the GET method is neither safe nor idempotent. So in fact it's not a REST interface at all.

There's a related "AJAX" interface as well which appears to use HTTP POST:

http://activemq.apache.org/ajax.html